services:
  - type: web
    name: flashcryptosenders
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm run start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_TELEMETRY_DISABLED
        value: 1
      - key: NEXT_SHARP_PATH
        value: /opt/render/project/node_modules/sharp
    autoDeploy: true
    plan: standard
    
    # Performance optimizations
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCpuPercent: 70
    
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /*
        name: Permissions-Policy
        value: camera=(), microphone=(), geolocation=(), interest-cohort=()
      
      # Cache static assets
      - path: /_next/static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /fonts/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /images/*
        name: Cache-Control
        value: public, max-age=31536000, immutable

  # Optional: Set up a separate service for API if needed
  - type: web
    name: flashcryptosenders-api
    env: node
    buildCommand: npm install && npm run build:api
    startCommand: npm run start:api
    envVars:
      - key: NODE_ENV
        value: production
    autoDeploy: true
    plan: starter

  # Optional: Set up a database if needed
  - type: pserv
    name: flashcryptosenders-db
    env: postgres
    plan: standard
    ipAllowList: []  # Only allow internal connections

# Optional: Set up a cache service for better performance
  - type: redis
    name: flashcryptosenders-cache
    ipAllowList: []  # Only allow internal connections
    plan: starter
